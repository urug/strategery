= Strategery

git clone git://github.com/urug/strategery.git  

== DESCRIPTION:

This is the project that the Utah Ruby Users Group has been working on. The plan is to:

* Implement some better practices with Ruby SVM
* Replace the libsvm code with RNum-dependent code

The name strategery is a Bush-ism, an effort to create meaning where maybe none existed.  We hope that your classifications actually make sense.

== FEATURES/PROBLEMS:

* An interface for training, scaling, cross-validating, and testing an SVM.
* A transform interface for creating SVM-ready data.
* A workflow tool for automatically classifying typical data sets.

== SYNOPSIS:

  require 'strategery'
  include SVM
  
  data = Transformer::CSV.load('traning_example.csv')
  model = Workflow.process(data)
  
  Transformer::CSV.load('testing_example.csv').each_line do |line|
    puts model.predict_probability(line)
  end

There are more examples in the examples directory.

== REQUIREMENTS:

* libsvm
* Ruby SVM

== INSTALL:
* gem sources -a http://gems.github.com (you only have to do this once)
* sudo gem install urug-strategery

== LICENSE:

Copyright (c) 2008-2009 Utah Ruby Users Group

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

== CREDITS:

Special thanks to:

* Rudi Cilibrasi (cilibrar@cilibrar.com) who wrote the Ruby SVM binding.
* libsvm
